@model CustomerNavigationModel
<button class="secondary-button" type="button" id="accountNavigationButton" data-toggle="collapse" data-target="#accountNavigation" aria-expanded="false" aria-controls="accountNavigation">Account Menu</button>

<div class="block block-account-navigation mb-3 collapse multi-collapse" id="accountNavigation">
    <div class="title">
        <strong>@T("Account.Navigation")</strong>
    </div>
    <div class="listbox">
        <ul class="list d-flex flex-wrap justify-content-around align-items-center">
            @* @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.AccountNavigationBefore }) *@
            @foreach (var item in Model.CustomerNavigationItems)
            {
                <li class="@item.ItemClass">
                    <a href="@Url.RouteUrl(item.RouteName)" class="@(Model.SelectedTab == item.Tab ? "active" : "inactive")">@(item.Title)</a>
                </li>
            }
            @* @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.AccountNavigationAfter }) *@
        </ul>
    </div>
</div>
<script asp-location="Footer">

        $(document).ready(function () {

            function accountNavigationInit() {
                $accountNavigation = $('#accountNavigation');

                // This will fire each time the window is resized:
                if ($(window).width() >= 1024) {
                    // if larger or equal
                    $accountNavigation.removeClass('collapse multi-collapse');

                } else {
                    $accountNavigation.addClass('collapse multi-collapse');
                }
            }

            // This will fire when document is ready:
            $(window).resize(function () {

                accountNavigationInit();

            }); // This will simulate a resize to trigger the initial run.


        });

</script>
